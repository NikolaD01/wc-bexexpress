var h=Object.defineProperty;var u=(n,t,e)=>t in n?h(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var o=(n,t,e)=>u(n,typeof t!="symbol"?t+"":t,e);import{A as l}from"./assets/ajax.service-CvjR3zXt.js";function c(n,t){let e=null;return(...i)=>{e!==null&&clearTimeout(e),e=window.setTimeout(()=>{n(...i),e=null},t)}}class y{constructor(t,e,i,s){o(this,"ajaxService");o(this,"stateField");o(this,"cityField");o(this,"streetField");o(this,"debouncedOnStateChange");this.ajaxService=new l(t);const r=document.querySelector(`#${e}`),a=document.querySelector(`#${i}`),d=document.querySelector(`#${s}`);if(!r||!a)throw new Error("State or city field not found in the DOM");this.stateField=r,this.cityField=a,this.streetField=d,this.debouncedOnStateChange=c(this.onStateChangeFromTitleChange.bind(this),300),this.init()}init(){this.stateField&&new MutationObserver(e=>{for(const i of e)if(i.type==="attributes"&&i.attributeName==="title"){const s=this.stateField.title;this.debouncedOnStateChange(s)}}).observe(this.stateField,{attributes:!0})}async onStateChangeFromTitleChange(t){if(!t){this.clearCities();return}this.clearStreets();try{const e=await this.ajaxService.post("checkout_cities",{municipalities_name:t});this.populateCities(e.data)}catch(e){console.error("Failed to load cities:",e)}}clearStreets(){this.streetField.innerHTML="<option value=''>Izaberite ulicu</option>>",this.streetField.disabled=!0}clearCities(){this.cityField.innerHTML="<option value=''>Izaberite podruƒçje</option>",this.cityField.disabled=!0}populateCities(t){this.cityField.innerHTML="",t.forEach(e=>{const i=document.createElement("option");i.value=e.id,i.textContent=e.name,this.cityField.appendChild(i)}),this.cityField.disabled=!1}}class F{constructor(t,e,i){o(this,"ajaxService");o(this,"cityField");o(this,"streetField");o(this,"debouncedOnCityChange");this.ajaxService=new l(t);const s=document.querySelector(`#${e}`),r=document.querySelector(`#${i}`);if(!r||!s)throw new Error("Street or city field not found in the DOM");this.cityField=s,this.streetField=r,this.debouncedOnCityChange=c(this.onCityChange.bind(this),300),this.init()}init(){this.cityField.addEventListener("change",t=>{const e=t.target.value;this.debouncedOnCityChange(e)})}async onCityChange(t){if(!t){this.clearStreets();return}try{const e=await this.ajaxService.post("checkout_streets",{place_id:t});this.populateStreets(e.data)}catch(e){console.error("Failed to load streets:",e)}}clearStreets(){this.streetField.innerHTML="<option value=''>Select a city first</option>",this.streetField.disabled=!0}populateStreets(t){this.streetField.innerHTML="",t.forEach(e=>{const i=document.createElement("option");i.value=e.id,i.textContent=e.name,this.streetField.appendChild(i)}),this.streetField.disabled=!1}}const b=()=>{setTimeout(function(){const n=document.getElementById("select2-billing_state-container"),t=document.getElementById("billing_city");if(n&&t)try{new y(window.admin_globals.ajax_url,"select2-billing_state-container","billing_city","billing_address_1"),new F(window.admin_globals.ajax_url,"billing_city","billing_address_1")}catch(e){console.error("CitySelector Initialization Error:",e)}},1e3)};document.addEventListener("DOMContentLoaded",b);
